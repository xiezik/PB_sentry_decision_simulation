// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inflation_layer_setting.proto

#include "inflation_layer_setting.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace hero_costmap {
class ParaInflationLayerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParaInflationLayer> _instance;
} _ParaInflationLayer_default_instance_;
}  // namespace hero_costmap
static void InitDefaultsscc_info_ParaInflationLayer_inflation_5flayer_5fsetting_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hero_costmap::_ParaInflationLayer_default_instance_;
    new (ptr) ::hero_costmap::ParaInflationLayer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hero_costmap::ParaInflationLayer::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParaInflationLayer_inflation_5flayer_5fsetting_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ParaInflationLayer_inflation_5flayer_5fsetting_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_inflation_5flayer_5fsetting_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_inflation_5flayer_5fsetting_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_inflation_5flayer_5fsetting_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_inflation_5flayer_5fsetting_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::hero_costmap::ParaInflationLayer, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hero_costmap::ParaInflationLayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hero_costmap::ParaInflationLayer, inflation_radius_),
  PROTOBUF_FIELD_OFFSET(::hero_costmap::ParaInflationLayer, cost_scaling_factor_),
  PROTOBUF_FIELD_OFFSET(::hero_costmap::ParaInflationLayer, is_debug_),
  PROTOBUF_FIELD_OFFSET(::hero_costmap::ParaInflationLayer, is_raw_rosmessage_),
  0,
  1,
  2,
  3,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::hero_costmap::ParaInflationLayer)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hero_costmap::_ParaInflationLayer_default_instance_),
};

const char descriptor_table_protodef_inflation_5flayer_5fsetting_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035inflation_layer_setting.proto\022\014hero_co"
  "stmap\"x\n\022ParaInflationLayer\022\030\n\020inflation"
  "_radius\030\001 \002(\001\022\033\n\023cost_scaling_factor\030\002 \002"
  "(\001\022\020\n\010is_debug\030\003 \002(\010\022\031\n\021is_raw_rosmessag"
  "e\030\004 \002(\010"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_inflation_5flayer_5fsetting_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_inflation_5flayer_5fsetting_2eproto_sccs[1] = {
  &scc_info_ParaInflationLayer_inflation_5flayer_5fsetting_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_inflation_5flayer_5fsetting_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_inflation_5flayer_5fsetting_2eproto = {
  false, false, descriptor_table_protodef_inflation_5flayer_5fsetting_2eproto, "inflation_layer_setting.proto", 167,
  &descriptor_table_inflation_5flayer_5fsetting_2eproto_once, descriptor_table_inflation_5flayer_5fsetting_2eproto_sccs, descriptor_table_inflation_5flayer_5fsetting_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_inflation_5flayer_5fsetting_2eproto::offsets,
  file_level_metadata_inflation_5flayer_5fsetting_2eproto, 1, file_level_enum_descriptors_inflation_5flayer_5fsetting_2eproto, file_level_service_descriptors_inflation_5flayer_5fsetting_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_inflation_5flayer_5fsetting_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_inflation_5flayer_5fsetting_2eproto)), true);
namespace hero_costmap {

// ===================================================================

void ParaInflationLayer::InitAsDefaultInstance() {
}
class ParaInflationLayer::_Internal {
 public:
  using HasBits = decltype(std::declval<ParaInflationLayer>()._has_bits_);
  static void set_has_inflation_radius(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_cost_scaling_factor(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_is_debug(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_is_raw_rosmessage(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000f) ^ 0x0000000f) != 0;
  }
};

ParaInflationLayer::ParaInflationLayer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hero_costmap.ParaInflationLayer)
}
ParaInflationLayer::ParaInflationLayer(const ParaInflationLayer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&inflation_radius_, &from.inflation_radius_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_raw_rosmessage_) -
    reinterpret_cast<char*>(&inflation_radius_)) + sizeof(is_raw_rosmessage_));
  // @@protoc_insertion_point(copy_constructor:hero_costmap.ParaInflationLayer)
}

void ParaInflationLayer::SharedCtor() {
  ::memset(&inflation_radius_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_raw_rosmessage_) -
      reinterpret_cast<char*>(&inflation_radius_)) + sizeof(is_raw_rosmessage_));
}

ParaInflationLayer::~ParaInflationLayer() {
  // @@protoc_insertion_point(destructor:hero_costmap.ParaInflationLayer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ParaInflationLayer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ParaInflationLayer::ArenaDtor(void* object) {
  ParaInflationLayer* _this = reinterpret_cast< ParaInflationLayer* >(object);
  (void)_this;
}
void ParaInflationLayer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ParaInflationLayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParaInflationLayer& ParaInflationLayer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParaInflationLayer_inflation_5flayer_5fsetting_2eproto.base);
  return *internal_default_instance();
}


void ParaInflationLayer::Clear() {
// @@protoc_insertion_point(message_clear_start:hero_costmap.ParaInflationLayer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&inflation_radius_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_raw_rosmessage_) -
        reinterpret_cast<char*>(&inflation_radius_)) + sizeof(is_raw_rosmessage_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParaInflationLayer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required double inflation_radius = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_inflation_radius(&has_bits);
          inflation_radius_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // required double cost_scaling_factor = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_cost_scaling_factor(&has_bits);
          cost_scaling_factor_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // required bool is_debug = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_is_debug(&has_bits);
          is_debug_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool is_raw_rosmessage = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_is_raw_rosmessage(&has_bits);
          is_raw_rosmessage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParaInflationLayer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hero_costmap.ParaInflationLayer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double inflation_radius = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_inflation_radius(), target);
  }

  // required double cost_scaling_factor = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_cost_scaling_factor(), target);
  }

  // required bool is_debug = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_is_debug(), target);
  }

  // required bool is_raw_rosmessage = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_is_raw_rosmessage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hero_costmap.ParaInflationLayer)
  return target;
}

size_t ParaInflationLayer::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:hero_costmap.ParaInflationLayer)
  size_t total_size = 0;

  if (_internal_has_inflation_radius()) {
    // required double inflation_radius = 1;
    total_size += 1 + 8;
  }

  if (_internal_has_cost_scaling_factor()) {
    // required double cost_scaling_factor = 2;
    total_size += 1 + 8;
  }

  if (_internal_has_is_debug()) {
    // required bool is_debug = 3;
    total_size += 1 + 1;
  }

  if (_internal_has_is_raw_rosmessage()) {
    // required bool is_raw_rosmessage = 4;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t ParaInflationLayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hero_costmap.ParaInflationLayer)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required double inflation_radius = 1;
    total_size += 1 + 8;

    // required double cost_scaling_factor = 2;
    total_size += 1 + 8;

    // required bool is_debug = 3;
    total_size += 1 + 1;

    // required bool is_raw_rosmessage = 4;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParaInflationLayer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hero_costmap.ParaInflationLayer)
  GOOGLE_DCHECK_NE(&from, this);
  const ParaInflationLayer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParaInflationLayer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hero_costmap.ParaInflationLayer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hero_costmap.ParaInflationLayer)
    MergeFrom(*source);
  }
}

void ParaInflationLayer::MergeFrom(const ParaInflationLayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hero_costmap.ParaInflationLayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      inflation_radius_ = from.inflation_radius_;
    }
    if (cached_has_bits & 0x00000002u) {
      cost_scaling_factor_ = from.cost_scaling_factor_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_debug_ = from.is_debug_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_raw_rosmessage_ = from.is_raw_rosmessage_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ParaInflationLayer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hero_costmap.ParaInflationLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParaInflationLayer::CopyFrom(const ParaInflationLayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hero_costmap.ParaInflationLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParaInflationLayer::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ParaInflationLayer::InternalSwap(ParaInflationLayer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ParaInflationLayer, is_raw_rosmessage_)
      + sizeof(ParaInflationLayer::is_raw_rosmessage_)
      - PROTOBUF_FIELD_OFFSET(ParaInflationLayer, inflation_radius_)>(
          reinterpret_cast<char*>(&inflation_radius_),
          reinterpret_cast<char*>(&other->inflation_radius_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ParaInflationLayer::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace hero_costmap
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::hero_costmap::ParaInflationLayer* Arena::CreateMaybeMessage< ::hero_costmap::ParaInflationLayer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hero_costmap::ParaInflationLayer >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

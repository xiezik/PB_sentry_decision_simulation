// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: costmap_parameter_setting.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_costmap_5fparameter_5fsetting_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_costmap_5fparameter_5fsetting_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_costmap_5fparameter_5fsetting_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_costmap_5fparameter_5fsetting_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_costmap_5fparameter_5fsetting_2eproto;
namespace hero_costmap {
class Footprint;
class FootprintDefaultTypeInternal;
extern FootprintDefaultTypeInternal _Footprint_default_instance_;
class ParaBasic;
class ParaBasicDefaultTypeInternal;
extern ParaBasicDefaultTypeInternal _ParaBasic_default_instance_;
class ParaCollection;
class ParaCollectionDefaultTypeInternal;
extern ParaCollectionDefaultTypeInternal _ParaCollection_default_instance_;
class ParaCostmapInterface;
class ParaCostmapInterfaceDefaultTypeInternal;
extern ParaCostmapInterfaceDefaultTypeInternal _ParaCostmapInterface_default_instance_;
class Point;
class PointDefaultTypeInternal;
extern PointDefaultTypeInternal _Point_default_instance_;
}  // namespace hero_costmap
PROTOBUF_NAMESPACE_OPEN
template<> ::hero_costmap::Footprint* Arena::CreateMaybeMessage<::hero_costmap::Footprint>(Arena*);
template<> ::hero_costmap::ParaBasic* Arena::CreateMaybeMessage<::hero_costmap::ParaBasic>(Arena*);
template<> ::hero_costmap::ParaCollection* Arena::CreateMaybeMessage<::hero_costmap::ParaCollection>(Arena*);
template<> ::hero_costmap::ParaCostmapInterface* Arena::CreateMaybeMessage<::hero_costmap::ParaCostmapInterface>(Arena*);
template<> ::hero_costmap::Point* Arena::CreateMaybeMessage<::hero_costmap::Point>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace hero_costmap {

// ===================================================================

class ParaBasic PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero_costmap.ParaBasic) */ {
 public:
  inline ParaBasic() : ParaBasic(nullptr) {};
  virtual ~ParaBasic();

  ParaBasic(const ParaBasic& from);
  ParaBasic(ParaBasic&& from) noexcept
    : ParaBasic() {
    *this = ::std::move(from);
  }

  inline ParaBasic& operator=(const ParaBasic& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParaBasic& operator=(ParaBasic&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ParaBasic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParaBasic* internal_default_instance() {
    return reinterpret_cast<const ParaBasic*>(
               &_ParaBasic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ParaBasic& a, ParaBasic& b) {
    a.Swap(&b);
  }
  inline void Swap(ParaBasic* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParaBasic* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParaBasic* New() const final {
    return CreateMaybeMessage<ParaBasic>(nullptr);
  }

  ParaBasic* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParaBasic>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParaBasic& from);
  void MergeFrom(const ParaBasic& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParaBasic* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero_costmap.ParaBasic";
  }
  protected:
  explicit ParaBasic(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_costmap_5fparameter_5fsetting_2eproto);
    return ::descriptor_table_costmap_5fparameter_5fsetting_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsRawRosmessageFieldNumber = 1,
    kIsDebugFieldNumber = 2,
  };
  // required bool is_raw_rosmessage = 1;
  bool has_is_raw_rosmessage() const;
  private:
  bool _internal_has_is_raw_rosmessage() const;
  public:
  void clear_is_raw_rosmessage();
  bool is_raw_rosmessage() const;
  void set_is_raw_rosmessage(bool value);
  private:
  bool _internal_is_raw_rosmessage() const;
  void _internal_set_is_raw_rosmessage(bool value);
  public:

  // optional bool is_debug = 2;
  bool has_is_debug() const;
  private:
  bool _internal_has_is_debug() const;
  public:
  void clear_is_debug();
  bool is_debug() const;
  void set_is_debug(bool value);
  private:
  bool _internal_is_debug() const;
  void _internal_set_is_debug(bool value);
  public:

  // @@protoc_insertion_point(class_scope:hero_costmap.ParaBasic)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool is_raw_rosmessage_;
  bool is_debug_;
  friend struct ::TableStruct_costmap_5fparameter_5fsetting_2eproto;
};
// -------------------------------------------------------------------

class ParaCostmapInterface PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero_costmap.ParaCostmapInterface) */ {
 public:
  inline ParaCostmapInterface() : ParaCostmapInterface(nullptr) {};
  virtual ~ParaCostmapInterface();

  ParaCostmapInterface(const ParaCostmapInterface& from);
  ParaCostmapInterface(ParaCostmapInterface&& from) noexcept
    : ParaCostmapInterface() {
    *this = ::std::move(from);
  }

  inline ParaCostmapInterface& operator=(const ParaCostmapInterface& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParaCostmapInterface& operator=(ParaCostmapInterface&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ParaCostmapInterface& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParaCostmapInterface* internal_default_instance() {
    return reinterpret_cast<const ParaCostmapInterface*>(
               &_ParaCostmapInterface_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ParaCostmapInterface& a, ParaCostmapInterface& b) {
    a.Swap(&b);
  }
  inline void Swap(ParaCostmapInterface* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParaCostmapInterface* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParaCostmapInterface* New() const final {
    return CreateMaybeMessage<ParaCostmapInterface>(nullptr);
  }

  ParaCostmapInterface* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParaCostmapInterface>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParaCostmapInterface& from);
  void MergeFrom(const ParaCostmapInterface& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParaCostmapInterface* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero_costmap.ParaCostmapInterface";
  }
  protected:
  explicit ParaCostmapInterface(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_costmap_5fparameter_5fsetting_2eproto);
    return ::descriptor_table_costmap_5fparameter_5fsetting_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGlobalFrameFieldNumber = 1,
    kRobotBaseFrameFieldNumber = 2,
    kInflationFilePathFieldNumber = 18,
    kFootprintPaddingFieldNumber = 3,
    kTransformToleranceFieldNumber = 4,
    kDistanceThresholdFieldNumber = 5,
    kMapWidthFieldNumber = 6,
    kMapHeightFieldNumber = 7,
    kMapOriginXFieldNumber = 8,
    kMapOriginYFieldNumber = 9,
    kMapResolutionFieldNumber = 10,
    kIsTrackingUnknownFieldNumber = 11,
    kIsRollingWindowFieldNumber = 12,
    kHasObstacleLayerFieldNumber = 13,
    kHasStaticLayerFieldNumber = 14,
    kHasDebuffLayerFieldNumber = 15,
    kHasTacticLayerFieldNumber = 16,
    kHasInflationLayerFieldNumber = 17,
    kMapUpdateFrequencyFieldNumber = 19,
  };
  // required string global_frame = 1;
  bool has_global_frame() const;
  private:
  bool _internal_has_global_frame() const;
  public:
  void clear_global_frame();
  const std::string& global_frame() const;
  void set_global_frame(const std::string& value);
  void set_global_frame(std::string&& value);
  void set_global_frame(const char* value);
  void set_global_frame(const char* value, size_t size);
  std::string* mutable_global_frame();
  std::string* release_global_frame();
  void set_allocated_global_frame(std::string* global_frame);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_global_frame();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_global_frame(
      std::string* global_frame);
  private:
  const std::string& _internal_global_frame() const;
  void _internal_set_global_frame(const std::string& value);
  std::string* _internal_mutable_global_frame();
  public:

  // required string robot_base_frame = 2;
  bool has_robot_base_frame() const;
  private:
  bool _internal_has_robot_base_frame() const;
  public:
  void clear_robot_base_frame();
  const std::string& robot_base_frame() const;
  void set_robot_base_frame(const std::string& value);
  void set_robot_base_frame(std::string&& value);
  void set_robot_base_frame(const char* value);
  void set_robot_base_frame(const char* value, size_t size);
  std::string* mutable_robot_base_frame();
  std::string* release_robot_base_frame();
  void set_allocated_robot_base_frame(std::string* robot_base_frame);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_robot_base_frame();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_robot_base_frame(
      std::string* robot_base_frame);
  private:
  const std::string& _internal_robot_base_frame() const;
  void _internal_set_robot_base_frame(const std::string& value);
  std::string* _internal_mutable_robot_base_frame();
  public:

  // required string inflation_file_path = 18;
  bool has_inflation_file_path() const;
  private:
  bool _internal_has_inflation_file_path() const;
  public:
  void clear_inflation_file_path();
  const std::string& inflation_file_path() const;
  void set_inflation_file_path(const std::string& value);
  void set_inflation_file_path(std::string&& value);
  void set_inflation_file_path(const char* value);
  void set_inflation_file_path(const char* value, size_t size);
  std::string* mutable_inflation_file_path();
  std::string* release_inflation_file_path();
  void set_allocated_inflation_file_path(std::string* inflation_file_path);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_inflation_file_path();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_inflation_file_path(
      std::string* inflation_file_path);
  private:
  const std::string& _internal_inflation_file_path() const;
  void _internal_set_inflation_file_path(const std::string& value);
  std::string* _internal_mutable_inflation_file_path();
  public:

  // required double footprint_padding = 3;
  bool has_footprint_padding() const;
  private:
  bool _internal_has_footprint_padding() const;
  public:
  void clear_footprint_padding();
  double footprint_padding() const;
  void set_footprint_padding(double value);
  private:
  double _internal_footprint_padding() const;
  void _internal_set_footprint_padding(double value);
  public:

  // required double transform_tolerance = 4;
  bool has_transform_tolerance() const;
  private:
  bool _internal_has_transform_tolerance() const;
  public:
  void clear_transform_tolerance();
  double transform_tolerance() const;
  void set_transform_tolerance(double value);
  private:
  double _internal_transform_tolerance() const;
  void _internal_set_transform_tolerance(double value);
  public:

  // required double distance_threshold = 5;
  bool has_distance_threshold() const;
  private:
  bool _internal_has_distance_threshold() const;
  public:
  void clear_distance_threshold();
  double distance_threshold() const;
  void set_distance_threshold(double value);
  private:
  double _internal_distance_threshold() const;
  void _internal_set_distance_threshold(double value);
  public:

  // required double map_width = 6;
  bool has_map_width() const;
  private:
  bool _internal_has_map_width() const;
  public:
  void clear_map_width();
  double map_width() const;
  void set_map_width(double value);
  private:
  double _internal_map_width() const;
  void _internal_set_map_width(double value);
  public:

  // required double map_height = 7;
  bool has_map_height() const;
  private:
  bool _internal_has_map_height() const;
  public:
  void clear_map_height();
  double map_height() const;
  void set_map_height(double value);
  private:
  double _internal_map_height() const;
  void _internal_set_map_height(double value);
  public:

  // required double map_origin_x = 8;
  bool has_map_origin_x() const;
  private:
  bool _internal_has_map_origin_x() const;
  public:
  void clear_map_origin_x();
  double map_origin_x() const;
  void set_map_origin_x(double value);
  private:
  double _internal_map_origin_x() const;
  void _internal_set_map_origin_x(double value);
  public:

  // required double map_origin_y = 9;
  bool has_map_origin_y() const;
  private:
  bool _internal_has_map_origin_y() const;
  public:
  void clear_map_origin_y();
  double map_origin_y() const;
  void set_map_origin_y(double value);
  private:
  double _internal_map_origin_y() const;
  void _internal_set_map_origin_y(double value);
  public:

  // required double map_resolution = 10;
  bool has_map_resolution() const;
  private:
  bool _internal_has_map_resolution() const;
  public:
  void clear_map_resolution();
  double map_resolution() const;
  void set_map_resolution(double value);
  private:
  double _internal_map_resolution() const;
  void _internal_set_map_resolution(double value);
  public:

  // required bool is_tracking_unknown = 11;
  bool has_is_tracking_unknown() const;
  private:
  bool _internal_has_is_tracking_unknown() const;
  public:
  void clear_is_tracking_unknown();
  bool is_tracking_unknown() const;
  void set_is_tracking_unknown(bool value);
  private:
  bool _internal_is_tracking_unknown() const;
  void _internal_set_is_tracking_unknown(bool value);
  public:

  // required bool is_rolling_window = 12;
  bool has_is_rolling_window() const;
  private:
  bool _internal_has_is_rolling_window() const;
  public:
  void clear_is_rolling_window();
  bool is_rolling_window() const;
  void set_is_rolling_window(bool value);
  private:
  bool _internal_is_rolling_window() const;
  void _internal_set_is_rolling_window(bool value);
  public:

  // required bool has_obstacle_layer = 13;
  bool has_has_obstacle_layer() const;
  private:
  bool _internal_has_has_obstacle_layer() const;
  public:
  void clear_has_obstacle_layer();
  bool has_obstacle_layer() const;
  void set_has_obstacle_layer(bool value);
  private:
  bool _internal_has_obstacle_layer() const;
  void _internal_set_has_obstacle_layer(bool value);
  public:

  // required bool has_static_layer = 14;
  bool has_has_static_layer() const;
  private:
  bool _internal_has_has_static_layer() const;
  public:
  void clear_has_static_layer();
  bool has_static_layer() const;
  void set_has_static_layer(bool value);
  private:
  bool _internal_has_static_layer() const;
  void _internal_set_has_static_layer(bool value);
  public:

  // required bool has_debuff_layer = 15;
  bool has_has_debuff_layer() const;
  private:
  bool _internal_has_has_debuff_layer() const;
  public:
  void clear_has_debuff_layer();
  bool has_debuff_layer() const;
  void set_has_debuff_layer(bool value);
  private:
  bool _internal_has_debuff_layer() const;
  void _internal_set_has_debuff_layer(bool value);
  public:

  // required bool has_tactic_layer = 16;
  bool has_has_tactic_layer() const;
  private:
  bool _internal_has_has_tactic_layer() const;
  public:
  void clear_has_tactic_layer();
  bool has_tactic_layer() const;
  void set_has_tactic_layer(bool value);
  private:
  bool _internal_has_tactic_layer() const;
  void _internal_set_has_tactic_layer(bool value);
  public:

  // required bool has_inflation_layer = 17;
  bool has_has_inflation_layer() const;
  private:
  bool _internal_has_has_inflation_layer() const;
  public:
  void clear_has_inflation_layer();
  bool has_inflation_layer() const;
  void set_has_inflation_layer(bool value);
  private:
  bool _internal_has_inflation_layer() const;
  void _internal_set_has_inflation_layer(bool value);
  public:

  // required double map_update_frequency = 19;
  bool has_map_update_frequency() const;
  private:
  bool _internal_has_map_update_frequency() const;
  public:
  void clear_map_update_frequency();
  double map_update_frequency() const;
  void set_map_update_frequency(double value);
  private:
  double _internal_map_update_frequency() const;
  void _internal_set_map_update_frequency(double value);
  public:

  // @@protoc_insertion_point(class_scope:hero_costmap.ParaCostmapInterface)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr global_frame_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr robot_base_frame_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr inflation_file_path_;
  double footprint_padding_;
  double transform_tolerance_;
  double distance_threshold_;
  double map_width_;
  double map_height_;
  double map_origin_x_;
  double map_origin_y_;
  double map_resolution_;
  bool is_tracking_unknown_;
  bool is_rolling_window_;
  bool has_obstacle_layer_;
  bool has_static_layer_;
  bool has_debuff_layer_;
  bool has_tactic_layer_;
  bool has_inflation_layer_;
  double map_update_frequency_;
  friend struct ::TableStruct_costmap_5fparameter_5fsetting_2eproto;
};
// -------------------------------------------------------------------

class Point PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero_costmap.Point) */ {
 public:
  inline Point() : Point(nullptr) {};
  virtual ~Point();

  Point(const Point& from);
  Point(Point&& from) noexcept
    : Point() {
    *this = ::std::move(from);
  }

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point& operator=(Point&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Point& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point* internal_default_instance() {
    return reinterpret_cast<const Point*>(
               &_Point_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Point& a, Point& b) {
    a.Swap(&b);
  }
  inline void Swap(Point* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Point* New() const final {
    return CreateMaybeMessage<Point>(nullptr);
  }

  Point* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Point>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero_costmap.Point";
  }
  protected:
  explicit Point(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_costmap_5fparameter_5fsetting_2eproto);
    return ::descriptor_table_costmap_5fparameter_5fsetting_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // required double x = 1;
  bool has_x() const;
  private:
  bool _internal_has_x() const;
  public:
  void clear_x();
  double x() const;
  void set_x(double value);
  private:
  double _internal_x() const;
  void _internal_set_x(double value);
  public:

  // required double y = 2;
  bool has_y() const;
  private:
  bool _internal_has_y() const;
  public:
  void clear_y();
  double y() const;
  void set_y(double value);
  private:
  double _internal_y() const;
  void _internal_set_y(double value);
  public:

  // @@protoc_insertion_point(class_scope:hero_costmap.Point)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  double x_;
  double y_;
  friend struct ::TableStruct_costmap_5fparameter_5fsetting_2eproto;
};
// -------------------------------------------------------------------

class Footprint PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero_costmap.Footprint) */ {
 public:
  inline Footprint() : Footprint(nullptr) {};
  virtual ~Footprint();

  Footprint(const Footprint& from);
  Footprint(Footprint&& from) noexcept
    : Footprint() {
    *this = ::std::move(from);
  }

  inline Footprint& operator=(const Footprint& from) {
    CopyFrom(from);
    return *this;
  }
  inline Footprint& operator=(Footprint&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Footprint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Footprint* internal_default_instance() {
    return reinterpret_cast<const Footprint*>(
               &_Footprint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Footprint& a, Footprint& b) {
    a.Swap(&b);
  }
  inline void Swap(Footprint* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Footprint* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Footprint* New() const final {
    return CreateMaybeMessage<Footprint>(nullptr);
  }

  Footprint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Footprint>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Footprint& from);
  void MergeFrom(const Footprint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Footprint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero_costmap.Footprint";
  }
  protected:
  explicit Footprint(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_costmap_5fparameter_5fsetting_2eproto);
    return ::descriptor_table_costmap_5fparameter_5fsetting_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPointFieldNumber = 1,
  };
  // repeated .hero_costmap.Point point = 1;
  int point_size() const;
  private:
  int _internal_point_size() const;
  public:
  void clear_point();
  ::hero_costmap::Point* mutable_point(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero_costmap::Point >*
      mutable_point();
  private:
  const ::hero_costmap::Point& _internal_point(int index) const;
  ::hero_costmap::Point* _internal_add_point();
  public:
  const ::hero_costmap::Point& point(int index) const;
  ::hero_costmap::Point* add_point();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero_costmap::Point >&
      point() const;

  // @@protoc_insertion_point(class_scope:hero_costmap.Footprint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero_costmap::Point > point_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_costmap_5fparameter_5fsetting_2eproto;
};
// -------------------------------------------------------------------

class ParaCollection PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:hero_costmap.ParaCollection) */ {
 public:
  inline ParaCollection() : ParaCollection(nullptr) {};
  virtual ~ParaCollection();

  ParaCollection(const ParaCollection& from);
  ParaCollection(ParaCollection&& from) noexcept
    : ParaCollection() {
    *this = ::std::move(from);
  }

  inline ParaCollection& operator=(const ParaCollection& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParaCollection& operator=(ParaCollection&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ParaCollection& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParaCollection* internal_default_instance() {
    return reinterpret_cast<const ParaCollection*>(
               &_ParaCollection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ParaCollection& a, ParaCollection& b) {
    a.Swap(&b);
  }
  inline void Swap(ParaCollection* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParaCollection* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParaCollection* New() const final {
    return CreateMaybeMessage<ParaCollection>(nullptr);
  }

  ParaCollection* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParaCollection>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParaCollection& from);
  void MergeFrom(const ParaCollection& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParaCollection* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "hero_costmap.ParaCollection";
  }
  protected:
  explicit ParaCollection(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_costmap_5fparameter_5fsetting_2eproto);
    return ::descriptor_table_costmap_5fparameter_5fsetting_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParaCostmapInterfaceFieldNumber = 1,
    kFootprintFieldNumber = 2,
    kParaBasicFieldNumber = 3,
  };
  // required .hero_costmap.ParaCostmapInterface para_costmap_interface = 1;
  bool has_para_costmap_interface() const;
  private:
  bool _internal_has_para_costmap_interface() const;
  public:
  void clear_para_costmap_interface();
  const ::hero_costmap::ParaCostmapInterface& para_costmap_interface() const;
  ::hero_costmap::ParaCostmapInterface* release_para_costmap_interface();
  ::hero_costmap::ParaCostmapInterface* mutable_para_costmap_interface();
  void set_allocated_para_costmap_interface(::hero_costmap::ParaCostmapInterface* para_costmap_interface);
  private:
  const ::hero_costmap::ParaCostmapInterface& _internal_para_costmap_interface() const;
  ::hero_costmap::ParaCostmapInterface* _internal_mutable_para_costmap_interface();
  public:
  void unsafe_arena_set_allocated_para_costmap_interface(
      ::hero_costmap::ParaCostmapInterface* para_costmap_interface);
  ::hero_costmap::ParaCostmapInterface* unsafe_arena_release_para_costmap_interface();

  // required .hero_costmap.Footprint footprint = 2;
  bool has_footprint() const;
  private:
  bool _internal_has_footprint() const;
  public:
  void clear_footprint();
  const ::hero_costmap::Footprint& footprint() const;
  ::hero_costmap::Footprint* release_footprint();
  ::hero_costmap::Footprint* mutable_footprint();
  void set_allocated_footprint(::hero_costmap::Footprint* footprint);
  private:
  const ::hero_costmap::Footprint& _internal_footprint() const;
  ::hero_costmap::Footprint* _internal_mutable_footprint();
  public:
  void unsafe_arena_set_allocated_footprint(
      ::hero_costmap::Footprint* footprint);
  ::hero_costmap::Footprint* unsafe_arena_release_footprint();

  // required .hero_costmap.ParaBasic para_basic = 3;
  bool has_para_basic() const;
  private:
  bool _internal_has_para_basic() const;
  public:
  void clear_para_basic();
  const ::hero_costmap::ParaBasic& para_basic() const;
  ::hero_costmap::ParaBasic* release_para_basic();
  ::hero_costmap::ParaBasic* mutable_para_basic();
  void set_allocated_para_basic(::hero_costmap::ParaBasic* para_basic);
  private:
  const ::hero_costmap::ParaBasic& _internal_para_basic() const;
  ::hero_costmap::ParaBasic* _internal_mutable_para_basic();
  public:
  void unsafe_arena_set_allocated_para_basic(
      ::hero_costmap::ParaBasic* para_basic);
  ::hero_costmap::ParaBasic* unsafe_arena_release_para_basic();

  // @@protoc_insertion_point(class_scope:hero_costmap.ParaCollection)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::hero_costmap::ParaCostmapInterface* para_costmap_interface_;
  ::hero_costmap::Footprint* footprint_;
  ::hero_costmap::ParaBasic* para_basic_;
  friend struct ::TableStruct_costmap_5fparameter_5fsetting_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ParaBasic

// required bool is_raw_rosmessage = 1;
inline bool ParaBasic::_internal_has_is_raw_rosmessage() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ParaBasic::has_is_raw_rosmessage() const {
  return _internal_has_is_raw_rosmessage();
}
inline void ParaBasic::clear_is_raw_rosmessage() {
  is_raw_rosmessage_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool ParaBasic::_internal_is_raw_rosmessage() const {
  return is_raw_rosmessage_;
}
inline bool ParaBasic::is_raw_rosmessage() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaBasic.is_raw_rosmessage)
  return _internal_is_raw_rosmessage();
}
inline void ParaBasic::_internal_set_is_raw_rosmessage(bool value) {
  _has_bits_[0] |= 0x00000001u;
  is_raw_rosmessage_ = value;
}
inline void ParaBasic::set_is_raw_rosmessage(bool value) {
  _internal_set_is_raw_rosmessage(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaBasic.is_raw_rosmessage)
}

// optional bool is_debug = 2;
inline bool ParaBasic::_internal_has_is_debug() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ParaBasic::has_is_debug() const {
  return _internal_has_is_debug();
}
inline void ParaBasic::clear_is_debug() {
  is_debug_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool ParaBasic::_internal_is_debug() const {
  return is_debug_;
}
inline bool ParaBasic::is_debug() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaBasic.is_debug)
  return _internal_is_debug();
}
inline void ParaBasic::_internal_set_is_debug(bool value) {
  _has_bits_[0] |= 0x00000002u;
  is_debug_ = value;
}
inline void ParaBasic::set_is_debug(bool value) {
  _internal_set_is_debug(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaBasic.is_debug)
}

// -------------------------------------------------------------------

// ParaCostmapInterface

// required string global_frame = 1;
inline bool ParaCostmapInterface::_internal_has_global_frame() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_global_frame() const {
  return _internal_has_global_frame();
}
inline void ParaCostmapInterface::clear_global_frame() {
  global_frame_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ParaCostmapInterface::global_frame() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.global_frame)
  return _internal_global_frame();
}
inline void ParaCostmapInterface::set_global_frame(const std::string& value) {
  _internal_set_global_frame(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.global_frame)
}
inline std::string* ParaCostmapInterface::mutable_global_frame() {
  // @@protoc_insertion_point(field_mutable:hero_costmap.ParaCostmapInterface.global_frame)
  return _internal_mutable_global_frame();
}
inline const std::string& ParaCostmapInterface::_internal_global_frame() const {
  return global_frame_.Get();
}
inline void ParaCostmapInterface::_internal_set_global_frame(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  global_frame_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ParaCostmapInterface::set_global_frame(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  global_frame_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:hero_costmap.ParaCostmapInterface.global_frame)
}
inline void ParaCostmapInterface::set_global_frame(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  global_frame_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:hero_costmap.ParaCostmapInterface.global_frame)
}
inline void ParaCostmapInterface::set_global_frame(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  global_frame_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:hero_costmap.ParaCostmapInterface.global_frame)
}
inline std::string* ParaCostmapInterface::_internal_mutable_global_frame() {
  _has_bits_[0] |= 0x00000001u;
  return global_frame_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ParaCostmapInterface::release_global_frame() {
  // @@protoc_insertion_point(field_release:hero_costmap.ParaCostmapInterface.global_frame)
  if (!_internal_has_global_frame()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return global_frame_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ParaCostmapInterface::set_allocated_global_frame(std::string* global_frame) {
  if (global_frame != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  global_frame_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), global_frame,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:hero_costmap.ParaCostmapInterface.global_frame)
}
inline std::string* ParaCostmapInterface::unsafe_arena_release_global_frame() {
  // @@protoc_insertion_point(field_unsafe_arena_release:hero_costmap.ParaCostmapInterface.global_frame)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000001u;
  return global_frame_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ParaCostmapInterface::unsafe_arena_set_allocated_global_frame(
    std::string* global_frame) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (global_frame != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  global_frame_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      global_frame, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hero_costmap.ParaCostmapInterface.global_frame)
}

// required string robot_base_frame = 2;
inline bool ParaCostmapInterface::_internal_has_robot_base_frame() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_robot_base_frame() const {
  return _internal_has_robot_base_frame();
}
inline void ParaCostmapInterface::clear_robot_base_frame() {
  robot_base_frame_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ParaCostmapInterface::robot_base_frame() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.robot_base_frame)
  return _internal_robot_base_frame();
}
inline void ParaCostmapInterface::set_robot_base_frame(const std::string& value) {
  _internal_set_robot_base_frame(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.robot_base_frame)
}
inline std::string* ParaCostmapInterface::mutable_robot_base_frame() {
  // @@protoc_insertion_point(field_mutable:hero_costmap.ParaCostmapInterface.robot_base_frame)
  return _internal_mutable_robot_base_frame();
}
inline const std::string& ParaCostmapInterface::_internal_robot_base_frame() const {
  return robot_base_frame_.Get();
}
inline void ParaCostmapInterface::_internal_set_robot_base_frame(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  robot_base_frame_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ParaCostmapInterface::set_robot_base_frame(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  robot_base_frame_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:hero_costmap.ParaCostmapInterface.robot_base_frame)
}
inline void ParaCostmapInterface::set_robot_base_frame(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  robot_base_frame_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:hero_costmap.ParaCostmapInterface.robot_base_frame)
}
inline void ParaCostmapInterface::set_robot_base_frame(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  robot_base_frame_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:hero_costmap.ParaCostmapInterface.robot_base_frame)
}
inline std::string* ParaCostmapInterface::_internal_mutable_robot_base_frame() {
  _has_bits_[0] |= 0x00000002u;
  return robot_base_frame_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ParaCostmapInterface::release_robot_base_frame() {
  // @@protoc_insertion_point(field_release:hero_costmap.ParaCostmapInterface.robot_base_frame)
  if (!_internal_has_robot_base_frame()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return robot_base_frame_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ParaCostmapInterface::set_allocated_robot_base_frame(std::string* robot_base_frame) {
  if (robot_base_frame != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  robot_base_frame_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), robot_base_frame,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:hero_costmap.ParaCostmapInterface.robot_base_frame)
}
inline std::string* ParaCostmapInterface::unsafe_arena_release_robot_base_frame() {
  // @@protoc_insertion_point(field_unsafe_arena_release:hero_costmap.ParaCostmapInterface.robot_base_frame)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000002u;
  return robot_base_frame_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ParaCostmapInterface::unsafe_arena_set_allocated_robot_base_frame(
    std::string* robot_base_frame) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (robot_base_frame != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  robot_base_frame_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      robot_base_frame, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hero_costmap.ParaCostmapInterface.robot_base_frame)
}

// required double footprint_padding = 3;
inline bool ParaCostmapInterface::_internal_has_footprint_padding() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_footprint_padding() const {
  return _internal_has_footprint_padding();
}
inline void ParaCostmapInterface::clear_footprint_padding() {
  footprint_padding_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline double ParaCostmapInterface::_internal_footprint_padding() const {
  return footprint_padding_;
}
inline double ParaCostmapInterface::footprint_padding() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.footprint_padding)
  return _internal_footprint_padding();
}
inline void ParaCostmapInterface::_internal_set_footprint_padding(double value) {
  _has_bits_[0] |= 0x00000008u;
  footprint_padding_ = value;
}
inline void ParaCostmapInterface::set_footprint_padding(double value) {
  _internal_set_footprint_padding(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.footprint_padding)
}

// required double transform_tolerance = 4;
inline bool ParaCostmapInterface::_internal_has_transform_tolerance() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_transform_tolerance() const {
  return _internal_has_transform_tolerance();
}
inline void ParaCostmapInterface::clear_transform_tolerance() {
  transform_tolerance_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline double ParaCostmapInterface::_internal_transform_tolerance() const {
  return transform_tolerance_;
}
inline double ParaCostmapInterface::transform_tolerance() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.transform_tolerance)
  return _internal_transform_tolerance();
}
inline void ParaCostmapInterface::_internal_set_transform_tolerance(double value) {
  _has_bits_[0] |= 0x00000010u;
  transform_tolerance_ = value;
}
inline void ParaCostmapInterface::set_transform_tolerance(double value) {
  _internal_set_transform_tolerance(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.transform_tolerance)
}

// required double distance_threshold = 5;
inline bool ParaCostmapInterface::_internal_has_distance_threshold() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_distance_threshold() const {
  return _internal_has_distance_threshold();
}
inline void ParaCostmapInterface::clear_distance_threshold() {
  distance_threshold_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline double ParaCostmapInterface::_internal_distance_threshold() const {
  return distance_threshold_;
}
inline double ParaCostmapInterface::distance_threshold() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.distance_threshold)
  return _internal_distance_threshold();
}
inline void ParaCostmapInterface::_internal_set_distance_threshold(double value) {
  _has_bits_[0] |= 0x00000020u;
  distance_threshold_ = value;
}
inline void ParaCostmapInterface::set_distance_threshold(double value) {
  _internal_set_distance_threshold(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.distance_threshold)
}

// required double map_width = 6;
inline bool ParaCostmapInterface::_internal_has_map_width() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_map_width() const {
  return _internal_has_map_width();
}
inline void ParaCostmapInterface::clear_map_width() {
  map_width_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline double ParaCostmapInterface::_internal_map_width() const {
  return map_width_;
}
inline double ParaCostmapInterface::map_width() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.map_width)
  return _internal_map_width();
}
inline void ParaCostmapInterface::_internal_set_map_width(double value) {
  _has_bits_[0] |= 0x00000040u;
  map_width_ = value;
}
inline void ParaCostmapInterface::set_map_width(double value) {
  _internal_set_map_width(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.map_width)
}

// required double map_height = 7;
inline bool ParaCostmapInterface::_internal_has_map_height() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_map_height() const {
  return _internal_has_map_height();
}
inline void ParaCostmapInterface::clear_map_height() {
  map_height_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline double ParaCostmapInterface::_internal_map_height() const {
  return map_height_;
}
inline double ParaCostmapInterface::map_height() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.map_height)
  return _internal_map_height();
}
inline void ParaCostmapInterface::_internal_set_map_height(double value) {
  _has_bits_[0] |= 0x00000080u;
  map_height_ = value;
}
inline void ParaCostmapInterface::set_map_height(double value) {
  _internal_set_map_height(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.map_height)
}

// required double map_origin_x = 8;
inline bool ParaCostmapInterface::_internal_has_map_origin_x() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_map_origin_x() const {
  return _internal_has_map_origin_x();
}
inline void ParaCostmapInterface::clear_map_origin_x() {
  map_origin_x_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline double ParaCostmapInterface::_internal_map_origin_x() const {
  return map_origin_x_;
}
inline double ParaCostmapInterface::map_origin_x() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.map_origin_x)
  return _internal_map_origin_x();
}
inline void ParaCostmapInterface::_internal_set_map_origin_x(double value) {
  _has_bits_[0] |= 0x00000100u;
  map_origin_x_ = value;
}
inline void ParaCostmapInterface::set_map_origin_x(double value) {
  _internal_set_map_origin_x(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.map_origin_x)
}

// required double map_origin_y = 9;
inline bool ParaCostmapInterface::_internal_has_map_origin_y() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_map_origin_y() const {
  return _internal_has_map_origin_y();
}
inline void ParaCostmapInterface::clear_map_origin_y() {
  map_origin_y_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline double ParaCostmapInterface::_internal_map_origin_y() const {
  return map_origin_y_;
}
inline double ParaCostmapInterface::map_origin_y() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.map_origin_y)
  return _internal_map_origin_y();
}
inline void ParaCostmapInterface::_internal_set_map_origin_y(double value) {
  _has_bits_[0] |= 0x00000200u;
  map_origin_y_ = value;
}
inline void ParaCostmapInterface::set_map_origin_y(double value) {
  _internal_set_map_origin_y(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.map_origin_y)
}

// required double map_resolution = 10;
inline bool ParaCostmapInterface::_internal_has_map_resolution() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_map_resolution() const {
  return _internal_has_map_resolution();
}
inline void ParaCostmapInterface::clear_map_resolution() {
  map_resolution_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline double ParaCostmapInterface::_internal_map_resolution() const {
  return map_resolution_;
}
inline double ParaCostmapInterface::map_resolution() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.map_resolution)
  return _internal_map_resolution();
}
inline void ParaCostmapInterface::_internal_set_map_resolution(double value) {
  _has_bits_[0] |= 0x00000400u;
  map_resolution_ = value;
}
inline void ParaCostmapInterface::set_map_resolution(double value) {
  _internal_set_map_resolution(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.map_resolution)
}

// required bool is_tracking_unknown = 11;
inline bool ParaCostmapInterface::_internal_has_is_tracking_unknown() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_is_tracking_unknown() const {
  return _internal_has_is_tracking_unknown();
}
inline void ParaCostmapInterface::clear_is_tracking_unknown() {
  is_tracking_unknown_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool ParaCostmapInterface::_internal_is_tracking_unknown() const {
  return is_tracking_unknown_;
}
inline bool ParaCostmapInterface::is_tracking_unknown() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.is_tracking_unknown)
  return _internal_is_tracking_unknown();
}
inline void ParaCostmapInterface::_internal_set_is_tracking_unknown(bool value) {
  _has_bits_[0] |= 0x00000800u;
  is_tracking_unknown_ = value;
}
inline void ParaCostmapInterface::set_is_tracking_unknown(bool value) {
  _internal_set_is_tracking_unknown(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.is_tracking_unknown)
}

// required bool is_rolling_window = 12;
inline bool ParaCostmapInterface::_internal_has_is_rolling_window() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_is_rolling_window() const {
  return _internal_has_is_rolling_window();
}
inline void ParaCostmapInterface::clear_is_rolling_window() {
  is_rolling_window_ = false;
  _has_bits_[0] &= ~0x00001000u;
}
inline bool ParaCostmapInterface::_internal_is_rolling_window() const {
  return is_rolling_window_;
}
inline bool ParaCostmapInterface::is_rolling_window() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.is_rolling_window)
  return _internal_is_rolling_window();
}
inline void ParaCostmapInterface::_internal_set_is_rolling_window(bool value) {
  _has_bits_[0] |= 0x00001000u;
  is_rolling_window_ = value;
}
inline void ParaCostmapInterface::set_is_rolling_window(bool value) {
  _internal_set_is_rolling_window(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.is_rolling_window)
}

// required bool has_obstacle_layer = 13;
inline bool ParaCostmapInterface::_internal_has_has_obstacle_layer() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_has_obstacle_layer() const {
  return _internal_has_has_obstacle_layer();
}
inline void ParaCostmapInterface::clear_has_obstacle_layer() {
  has_obstacle_layer_ = false;
  _has_bits_[0] &= ~0x00002000u;
}
inline bool ParaCostmapInterface::_internal_has_obstacle_layer() const {
  return has_obstacle_layer_;
}
inline bool ParaCostmapInterface::has_obstacle_layer() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.has_obstacle_layer)
  return _internal_has_obstacle_layer();
}
inline void ParaCostmapInterface::_internal_set_has_obstacle_layer(bool value) {
  _has_bits_[0] |= 0x00002000u;
  has_obstacle_layer_ = value;
}
inline void ParaCostmapInterface::set_has_obstacle_layer(bool value) {
  _internal_set_has_obstacle_layer(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.has_obstacle_layer)
}

// required bool has_static_layer = 14;
inline bool ParaCostmapInterface::_internal_has_has_static_layer() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_has_static_layer() const {
  return _internal_has_has_static_layer();
}
inline void ParaCostmapInterface::clear_has_static_layer() {
  has_static_layer_ = false;
  _has_bits_[0] &= ~0x00004000u;
}
inline bool ParaCostmapInterface::_internal_has_static_layer() const {
  return has_static_layer_;
}
inline bool ParaCostmapInterface::has_static_layer() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.has_static_layer)
  return _internal_has_static_layer();
}
inline void ParaCostmapInterface::_internal_set_has_static_layer(bool value) {
  _has_bits_[0] |= 0x00004000u;
  has_static_layer_ = value;
}
inline void ParaCostmapInterface::set_has_static_layer(bool value) {
  _internal_set_has_static_layer(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.has_static_layer)
}

// required bool has_debuff_layer = 15;
inline bool ParaCostmapInterface::_internal_has_has_debuff_layer() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_has_debuff_layer() const {
  return _internal_has_has_debuff_layer();
}
inline void ParaCostmapInterface::clear_has_debuff_layer() {
  has_debuff_layer_ = false;
  _has_bits_[0] &= ~0x00008000u;
}
inline bool ParaCostmapInterface::_internal_has_debuff_layer() const {
  return has_debuff_layer_;
}
inline bool ParaCostmapInterface::has_debuff_layer() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.has_debuff_layer)
  return _internal_has_debuff_layer();
}
inline void ParaCostmapInterface::_internal_set_has_debuff_layer(bool value) {
  _has_bits_[0] |= 0x00008000u;
  has_debuff_layer_ = value;
}
inline void ParaCostmapInterface::set_has_debuff_layer(bool value) {
  _internal_set_has_debuff_layer(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.has_debuff_layer)
}

// required bool has_tactic_layer = 16;
inline bool ParaCostmapInterface::_internal_has_has_tactic_layer() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_has_tactic_layer() const {
  return _internal_has_has_tactic_layer();
}
inline void ParaCostmapInterface::clear_has_tactic_layer() {
  has_tactic_layer_ = false;
  _has_bits_[0] &= ~0x00010000u;
}
inline bool ParaCostmapInterface::_internal_has_tactic_layer() const {
  return has_tactic_layer_;
}
inline bool ParaCostmapInterface::has_tactic_layer() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.has_tactic_layer)
  return _internal_has_tactic_layer();
}
inline void ParaCostmapInterface::_internal_set_has_tactic_layer(bool value) {
  _has_bits_[0] |= 0x00010000u;
  has_tactic_layer_ = value;
}
inline void ParaCostmapInterface::set_has_tactic_layer(bool value) {
  _internal_set_has_tactic_layer(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.has_tactic_layer)
}

// required bool has_inflation_layer = 17;
inline bool ParaCostmapInterface::_internal_has_has_inflation_layer() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_has_inflation_layer() const {
  return _internal_has_has_inflation_layer();
}
inline void ParaCostmapInterface::clear_has_inflation_layer() {
  has_inflation_layer_ = false;
  _has_bits_[0] &= ~0x00020000u;
}
inline bool ParaCostmapInterface::_internal_has_inflation_layer() const {
  return has_inflation_layer_;
}
inline bool ParaCostmapInterface::has_inflation_layer() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.has_inflation_layer)
  return _internal_has_inflation_layer();
}
inline void ParaCostmapInterface::_internal_set_has_inflation_layer(bool value) {
  _has_bits_[0] |= 0x00020000u;
  has_inflation_layer_ = value;
}
inline void ParaCostmapInterface::set_has_inflation_layer(bool value) {
  _internal_set_has_inflation_layer(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.has_inflation_layer)
}

// required string inflation_file_path = 18;
inline bool ParaCostmapInterface::_internal_has_inflation_file_path() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_inflation_file_path() const {
  return _internal_has_inflation_file_path();
}
inline void ParaCostmapInterface::clear_inflation_file_path() {
  inflation_file_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& ParaCostmapInterface::inflation_file_path() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.inflation_file_path)
  return _internal_inflation_file_path();
}
inline void ParaCostmapInterface::set_inflation_file_path(const std::string& value) {
  _internal_set_inflation_file_path(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.inflation_file_path)
}
inline std::string* ParaCostmapInterface::mutable_inflation_file_path() {
  // @@protoc_insertion_point(field_mutable:hero_costmap.ParaCostmapInterface.inflation_file_path)
  return _internal_mutable_inflation_file_path();
}
inline const std::string& ParaCostmapInterface::_internal_inflation_file_path() const {
  return inflation_file_path_.Get();
}
inline void ParaCostmapInterface::_internal_set_inflation_file_path(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  inflation_file_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ParaCostmapInterface::set_inflation_file_path(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  inflation_file_path_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:hero_costmap.ParaCostmapInterface.inflation_file_path)
}
inline void ParaCostmapInterface::set_inflation_file_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  inflation_file_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:hero_costmap.ParaCostmapInterface.inflation_file_path)
}
inline void ParaCostmapInterface::set_inflation_file_path(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  inflation_file_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:hero_costmap.ParaCostmapInterface.inflation_file_path)
}
inline std::string* ParaCostmapInterface::_internal_mutable_inflation_file_path() {
  _has_bits_[0] |= 0x00000004u;
  return inflation_file_path_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ParaCostmapInterface::release_inflation_file_path() {
  // @@protoc_insertion_point(field_release:hero_costmap.ParaCostmapInterface.inflation_file_path)
  if (!_internal_has_inflation_file_path()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return inflation_file_path_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ParaCostmapInterface::set_allocated_inflation_file_path(std::string* inflation_file_path) {
  if (inflation_file_path != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  inflation_file_path_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), inflation_file_path,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:hero_costmap.ParaCostmapInterface.inflation_file_path)
}
inline std::string* ParaCostmapInterface::unsafe_arena_release_inflation_file_path() {
  // @@protoc_insertion_point(field_unsafe_arena_release:hero_costmap.ParaCostmapInterface.inflation_file_path)
  GOOGLE_DCHECK(GetArena() != nullptr);
  _has_bits_[0] &= ~0x00000004u;
  return inflation_file_path_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ParaCostmapInterface::unsafe_arena_set_allocated_inflation_file_path(
    std::string* inflation_file_path) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (inflation_file_path != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  inflation_file_path_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      inflation_file_path, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hero_costmap.ParaCostmapInterface.inflation_file_path)
}

// required double map_update_frequency = 19;
inline bool ParaCostmapInterface::_internal_has_map_update_frequency() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool ParaCostmapInterface::has_map_update_frequency() const {
  return _internal_has_map_update_frequency();
}
inline void ParaCostmapInterface::clear_map_update_frequency() {
  map_update_frequency_ = 0;
  _has_bits_[0] &= ~0x00040000u;
}
inline double ParaCostmapInterface::_internal_map_update_frequency() const {
  return map_update_frequency_;
}
inline double ParaCostmapInterface::map_update_frequency() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCostmapInterface.map_update_frequency)
  return _internal_map_update_frequency();
}
inline void ParaCostmapInterface::_internal_set_map_update_frequency(double value) {
  _has_bits_[0] |= 0x00040000u;
  map_update_frequency_ = value;
}
inline void ParaCostmapInterface::set_map_update_frequency(double value) {
  _internal_set_map_update_frequency(value);
  // @@protoc_insertion_point(field_set:hero_costmap.ParaCostmapInterface.map_update_frequency)
}

// -------------------------------------------------------------------

// Point

// required double x = 1;
inline bool Point::_internal_has_x() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Point::has_x() const {
  return _internal_has_x();
}
inline void Point::clear_x() {
  x_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double Point::_internal_x() const {
  return x_;
}
inline double Point::x() const {
  // @@protoc_insertion_point(field_get:hero_costmap.Point.x)
  return _internal_x();
}
inline void Point::_internal_set_x(double value) {
  _has_bits_[0] |= 0x00000001u;
  x_ = value;
}
inline void Point::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:hero_costmap.Point.x)
}

// required double y = 2;
inline bool Point::_internal_has_y() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Point::has_y() const {
  return _internal_has_y();
}
inline void Point::clear_y() {
  y_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double Point::_internal_y() const {
  return y_;
}
inline double Point::y() const {
  // @@protoc_insertion_point(field_get:hero_costmap.Point.y)
  return _internal_y();
}
inline void Point::_internal_set_y(double value) {
  _has_bits_[0] |= 0x00000002u;
  y_ = value;
}
inline void Point::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:hero_costmap.Point.y)
}

// -------------------------------------------------------------------

// Footprint

// repeated .hero_costmap.Point point = 1;
inline int Footprint::_internal_point_size() const {
  return point_.size();
}
inline int Footprint::point_size() const {
  return _internal_point_size();
}
inline void Footprint::clear_point() {
  point_.Clear();
}
inline ::hero_costmap::Point* Footprint::mutable_point(int index) {
  // @@protoc_insertion_point(field_mutable:hero_costmap.Footprint.point)
  return point_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero_costmap::Point >*
Footprint::mutable_point() {
  // @@protoc_insertion_point(field_mutable_list:hero_costmap.Footprint.point)
  return &point_;
}
inline const ::hero_costmap::Point& Footprint::_internal_point(int index) const {
  return point_.Get(index);
}
inline const ::hero_costmap::Point& Footprint::point(int index) const {
  // @@protoc_insertion_point(field_get:hero_costmap.Footprint.point)
  return _internal_point(index);
}
inline ::hero_costmap::Point* Footprint::_internal_add_point() {
  return point_.Add();
}
inline ::hero_costmap::Point* Footprint::add_point() {
  // @@protoc_insertion_point(field_add:hero_costmap.Footprint.point)
  return _internal_add_point();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::hero_costmap::Point >&
Footprint::point() const {
  // @@protoc_insertion_point(field_list:hero_costmap.Footprint.point)
  return point_;
}

// -------------------------------------------------------------------

// ParaCollection

// required .hero_costmap.ParaCostmapInterface para_costmap_interface = 1;
inline bool ParaCollection::_internal_has_para_costmap_interface() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || para_costmap_interface_ != nullptr);
  return value;
}
inline bool ParaCollection::has_para_costmap_interface() const {
  return _internal_has_para_costmap_interface();
}
inline void ParaCollection::clear_para_costmap_interface() {
  if (para_costmap_interface_ != nullptr) para_costmap_interface_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::hero_costmap::ParaCostmapInterface& ParaCollection::_internal_para_costmap_interface() const {
  const ::hero_costmap::ParaCostmapInterface* p = para_costmap_interface_;
  return p != nullptr ? *p : *reinterpret_cast<const ::hero_costmap::ParaCostmapInterface*>(
      &::hero_costmap::_ParaCostmapInterface_default_instance_);
}
inline const ::hero_costmap::ParaCostmapInterface& ParaCollection::para_costmap_interface() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCollection.para_costmap_interface)
  return _internal_para_costmap_interface();
}
inline void ParaCollection::unsafe_arena_set_allocated_para_costmap_interface(
    ::hero_costmap::ParaCostmapInterface* para_costmap_interface) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(para_costmap_interface_);
  }
  para_costmap_interface_ = para_costmap_interface;
  if (para_costmap_interface) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hero_costmap.ParaCollection.para_costmap_interface)
}
inline ::hero_costmap::ParaCostmapInterface* ParaCollection::release_para_costmap_interface() {
  auto temp = unsafe_arena_release_para_costmap_interface();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::hero_costmap::ParaCostmapInterface* ParaCollection::unsafe_arena_release_para_costmap_interface() {
  // @@protoc_insertion_point(field_release:hero_costmap.ParaCollection.para_costmap_interface)
  _has_bits_[0] &= ~0x00000001u;
  ::hero_costmap::ParaCostmapInterface* temp = para_costmap_interface_;
  para_costmap_interface_ = nullptr;
  return temp;
}
inline ::hero_costmap::ParaCostmapInterface* ParaCollection::_internal_mutable_para_costmap_interface() {
  _has_bits_[0] |= 0x00000001u;
  if (para_costmap_interface_ == nullptr) {
    auto* p = CreateMaybeMessage<::hero_costmap::ParaCostmapInterface>(GetArena());
    para_costmap_interface_ = p;
  }
  return para_costmap_interface_;
}
inline ::hero_costmap::ParaCostmapInterface* ParaCollection::mutable_para_costmap_interface() {
  // @@protoc_insertion_point(field_mutable:hero_costmap.ParaCollection.para_costmap_interface)
  return _internal_mutable_para_costmap_interface();
}
inline void ParaCollection::set_allocated_para_costmap_interface(::hero_costmap::ParaCostmapInterface* para_costmap_interface) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete para_costmap_interface_;
  }
  if (para_costmap_interface) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(para_costmap_interface);
    if (message_arena != submessage_arena) {
      para_costmap_interface = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, para_costmap_interface, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  para_costmap_interface_ = para_costmap_interface;
  // @@protoc_insertion_point(field_set_allocated:hero_costmap.ParaCollection.para_costmap_interface)
}

// required .hero_costmap.Footprint footprint = 2;
inline bool ParaCollection::_internal_has_footprint() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || footprint_ != nullptr);
  return value;
}
inline bool ParaCollection::has_footprint() const {
  return _internal_has_footprint();
}
inline void ParaCollection::clear_footprint() {
  if (footprint_ != nullptr) footprint_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::hero_costmap::Footprint& ParaCollection::_internal_footprint() const {
  const ::hero_costmap::Footprint* p = footprint_;
  return p != nullptr ? *p : *reinterpret_cast<const ::hero_costmap::Footprint*>(
      &::hero_costmap::_Footprint_default_instance_);
}
inline const ::hero_costmap::Footprint& ParaCollection::footprint() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCollection.footprint)
  return _internal_footprint();
}
inline void ParaCollection::unsafe_arena_set_allocated_footprint(
    ::hero_costmap::Footprint* footprint) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(footprint_);
  }
  footprint_ = footprint;
  if (footprint) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hero_costmap.ParaCollection.footprint)
}
inline ::hero_costmap::Footprint* ParaCollection::release_footprint() {
  auto temp = unsafe_arena_release_footprint();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::hero_costmap::Footprint* ParaCollection::unsafe_arena_release_footprint() {
  // @@protoc_insertion_point(field_release:hero_costmap.ParaCollection.footprint)
  _has_bits_[0] &= ~0x00000002u;
  ::hero_costmap::Footprint* temp = footprint_;
  footprint_ = nullptr;
  return temp;
}
inline ::hero_costmap::Footprint* ParaCollection::_internal_mutable_footprint() {
  _has_bits_[0] |= 0x00000002u;
  if (footprint_ == nullptr) {
    auto* p = CreateMaybeMessage<::hero_costmap::Footprint>(GetArena());
    footprint_ = p;
  }
  return footprint_;
}
inline ::hero_costmap::Footprint* ParaCollection::mutable_footprint() {
  // @@protoc_insertion_point(field_mutable:hero_costmap.ParaCollection.footprint)
  return _internal_mutable_footprint();
}
inline void ParaCollection::set_allocated_footprint(::hero_costmap::Footprint* footprint) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete footprint_;
  }
  if (footprint) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(footprint);
    if (message_arena != submessage_arena) {
      footprint = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, footprint, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  footprint_ = footprint;
  // @@protoc_insertion_point(field_set_allocated:hero_costmap.ParaCollection.footprint)
}

// required .hero_costmap.ParaBasic para_basic = 3;
inline bool ParaCollection::_internal_has_para_basic() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || para_basic_ != nullptr);
  return value;
}
inline bool ParaCollection::has_para_basic() const {
  return _internal_has_para_basic();
}
inline void ParaCollection::clear_para_basic() {
  if (para_basic_ != nullptr) para_basic_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::hero_costmap::ParaBasic& ParaCollection::_internal_para_basic() const {
  const ::hero_costmap::ParaBasic* p = para_basic_;
  return p != nullptr ? *p : *reinterpret_cast<const ::hero_costmap::ParaBasic*>(
      &::hero_costmap::_ParaBasic_default_instance_);
}
inline const ::hero_costmap::ParaBasic& ParaCollection::para_basic() const {
  // @@protoc_insertion_point(field_get:hero_costmap.ParaCollection.para_basic)
  return _internal_para_basic();
}
inline void ParaCollection::unsafe_arena_set_allocated_para_basic(
    ::hero_costmap::ParaBasic* para_basic) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(para_basic_);
  }
  para_basic_ = para_basic;
  if (para_basic) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hero_costmap.ParaCollection.para_basic)
}
inline ::hero_costmap::ParaBasic* ParaCollection::release_para_basic() {
  auto temp = unsafe_arena_release_para_basic();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::hero_costmap::ParaBasic* ParaCollection::unsafe_arena_release_para_basic() {
  // @@protoc_insertion_point(field_release:hero_costmap.ParaCollection.para_basic)
  _has_bits_[0] &= ~0x00000004u;
  ::hero_costmap::ParaBasic* temp = para_basic_;
  para_basic_ = nullptr;
  return temp;
}
inline ::hero_costmap::ParaBasic* ParaCollection::_internal_mutable_para_basic() {
  _has_bits_[0] |= 0x00000004u;
  if (para_basic_ == nullptr) {
    auto* p = CreateMaybeMessage<::hero_costmap::ParaBasic>(GetArena());
    para_basic_ = p;
  }
  return para_basic_;
}
inline ::hero_costmap::ParaBasic* ParaCollection::mutable_para_basic() {
  // @@protoc_insertion_point(field_mutable:hero_costmap.ParaCollection.para_basic)
  return _internal_mutable_para_basic();
}
inline void ParaCollection::set_allocated_para_basic(::hero_costmap::ParaBasic* para_basic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete para_basic_;
  }
  if (para_basic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(para_basic);
    if (message_arena != submessage_arena) {
      para_basic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, para_basic, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  para_basic_ = para_basic;
  // @@protoc_insertion_point(field_set_allocated:hero_costmap.ParaCollection.para_basic)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace hero_costmap

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_costmap_5fparameter_5fsetting_2eproto

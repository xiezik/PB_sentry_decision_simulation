// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: static_layer_setting.proto

#include "static_layer_setting.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace hero_costmap {
class ParaStaticLayerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParaStaticLayer> _instance;
} _ParaStaticLayer_default_instance_;
}  // namespace hero_costmap
static void InitDefaultsscc_info_ParaStaticLayer_static_5flayer_5fsetting_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::hero_costmap::_ParaStaticLayer_default_instance_;
    new (ptr) ::hero_costmap::ParaStaticLayer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hero_costmap::ParaStaticLayer::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParaStaticLayer_static_5flayer_5fsetting_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ParaStaticLayer_static_5flayer_5fsetting_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_static_5flayer_5fsetting_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_static_5flayer_5fsetting_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_static_5flayer_5fsetting_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_static_5flayer_5fsetting_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::hero_costmap::ParaStaticLayer, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::hero_costmap::ParaStaticLayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::hero_costmap::ParaStaticLayer, first_map_only_),
  PROTOBUF_FIELD_OFFSET(::hero_costmap::ParaStaticLayer, subscribe_to_updates_),
  PROTOBUF_FIELD_OFFSET(::hero_costmap::ParaStaticLayer, track_unknown_space_),
  PROTOBUF_FIELD_OFFSET(::hero_costmap::ParaStaticLayer, use_maximum_),
  PROTOBUF_FIELD_OFFSET(::hero_costmap::ParaStaticLayer, unknown_cost_value_),
  PROTOBUF_FIELD_OFFSET(::hero_costmap::ParaStaticLayer, trinary_map_),
  PROTOBUF_FIELD_OFFSET(::hero_costmap::ParaStaticLayer, lethal_threshold_),
  PROTOBUF_FIELD_OFFSET(::hero_costmap::ParaStaticLayer, topic_name_),
  PROTOBUF_FIELD_OFFSET(::hero_costmap::ParaStaticLayer, is_raw_rosmessage_),
  PROTOBUF_FIELD_OFFSET(::hero_costmap::ParaStaticLayer, is_debug_),
  1,
  2,
  3,
  4,
  5,
  7,
  6,
  0,
  8,
  9,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, sizeof(::hero_costmap::ParaStaticLayer)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::hero_costmap::_ParaStaticLayer_default_instance_),
};

const char descriptor_table_protodef_static_5flayer_5fsetting_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032static_layer_setting.proto\022\014hero_costm"
  "ap\"\205\002\n\017ParaStaticLayer\022\026\n\016first_map_only"
  "\030\001 \002(\010\022\034\n\024subscribe_to_updates\030\002 \002(\010\022\033\n\023"
  "track_unknown_space\030\003 \002(\010\022\023\n\013use_maximum"
  "\030\004 \002(\010\022\032\n\022unknown_cost_value\030\005 \002(\005\022\023\n\013tr"
  "inary_map\030\006 \002(\010\022\030\n\020lethal_threshold\030\007 \002("
  "\005\022\022\n\ntopic_name\030\010 \002(\t\022\031\n\021is_raw_rosmessa"
  "ge\030\t \002(\010\022\020\n\010is_debug\030\n \002(\010"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_static_5flayer_5fsetting_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_static_5flayer_5fsetting_2eproto_sccs[1] = {
  &scc_info_ParaStaticLayer_static_5flayer_5fsetting_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_static_5flayer_5fsetting_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_static_5flayer_5fsetting_2eproto = {
  false, false, descriptor_table_protodef_static_5flayer_5fsetting_2eproto, "static_layer_setting.proto", 306,
  &descriptor_table_static_5flayer_5fsetting_2eproto_once, descriptor_table_static_5flayer_5fsetting_2eproto_sccs, descriptor_table_static_5flayer_5fsetting_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_static_5flayer_5fsetting_2eproto::offsets,
  file_level_metadata_static_5flayer_5fsetting_2eproto, 1, file_level_enum_descriptors_static_5flayer_5fsetting_2eproto, file_level_service_descriptors_static_5flayer_5fsetting_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_static_5flayer_5fsetting_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_static_5flayer_5fsetting_2eproto)), true);
namespace hero_costmap {

// ===================================================================

void ParaStaticLayer::InitAsDefaultInstance() {
}
class ParaStaticLayer::_Internal {
 public:
  using HasBits = decltype(std::declval<ParaStaticLayer>()._has_bits_);
  static void set_has_first_map_only(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_subscribe_to_updates(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_track_unknown_space(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_use_maximum(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_unknown_cost_value(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_trinary_map(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_lethal_threshold(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_topic_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_raw_rosmessage(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_is_debug(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x000003ff) ^ 0x000003ff) != 0;
  }
};

ParaStaticLayer::ParaStaticLayer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:hero_costmap.ParaStaticLayer)
}
ParaStaticLayer::ParaStaticLayer(const ParaStaticLayer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  topic_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_topic_name()) {
    topic_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_topic_name(),
      GetArena());
  }
  ::memcpy(&first_map_only_, &from.first_map_only_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_debug_) -
    reinterpret_cast<char*>(&first_map_only_)) + sizeof(is_debug_));
  // @@protoc_insertion_point(copy_constructor:hero_costmap.ParaStaticLayer)
}

void ParaStaticLayer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ParaStaticLayer_static_5flayer_5fsetting_2eproto.base);
  topic_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&first_map_only_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_debug_) -
      reinterpret_cast<char*>(&first_map_only_)) + sizeof(is_debug_));
}

ParaStaticLayer::~ParaStaticLayer() {
  // @@protoc_insertion_point(destructor:hero_costmap.ParaStaticLayer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ParaStaticLayer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  topic_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ParaStaticLayer::ArenaDtor(void* object) {
  ParaStaticLayer* _this = reinterpret_cast< ParaStaticLayer* >(object);
  (void)_this;
}
void ParaStaticLayer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ParaStaticLayer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParaStaticLayer& ParaStaticLayer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParaStaticLayer_static_5flayer_5fsetting_2eproto.base);
  return *internal_default_instance();
}


void ParaStaticLayer::Clear() {
// @@protoc_insertion_point(message_clear_start:hero_costmap.ParaStaticLayer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    topic_name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&first_map_only_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&trinary_map_) -
        reinterpret_cast<char*>(&first_map_only_)) + sizeof(trinary_map_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&is_raw_rosmessage_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_debug_) -
        reinterpret_cast<char*>(&is_raw_rosmessage_)) + sizeof(is_debug_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParaStaticLayer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required bool first_map_only = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_first_map_only(&has_bits);
          first_map_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool subscribe_to_updates = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_subscribe_to_updates(&has_bits);
          subscribe_to_updates_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool track_unknown_space = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_track_unknown_space(&has_bits);
          track_unknown_space_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool use_maximum = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_use_maximum(&has_bits);
          use_maximum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int32 unknown_cost_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_unknown_cost_value(&has_bits);
          unknown_cost_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool trinary_map = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_trinary_map(&has_bits);
          trinary_map_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int32 lethal_threshold = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_lethal_threshold(&has_bits);
          lethal_threshold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string topic_name = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_topic_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "hero_costmap.ParaStaticLayer.topic_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool is_raw_rosmessage = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_is_raw_rosmessage(&has_bits);
          is_raw_rosmessage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bool is_debug = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_is_debug(&has_bits);
          is_debug_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParaStaticLayer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:hero_costmap.ParaStaticLayer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool first_map_only = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_first_map_only(), target);
  }

  // required bool subscribe_to_updates = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_subscribe_to_updates(), target);
  }

  // required bool track_unknown_space = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_track_unknown_space(), target);
  }

  // required bool use_maximum = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_use_maximum(), target);
  }

  // required int32 unknown_cost_value = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_unknown_cost_value(), target);
  }

  // required bool trinary_map = 6;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_trinary_map(), target);
  }

  // required int32 lethal_threshold = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_lethal_threshold(), target);
  }

  // required string topic_name = 8;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_topic_name().data(), static_cast<int>(this->_internal_topic_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "hero_costmap.ParaStaticLayer.topic_name");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_topic_name(), target);
  }

  // required bool is_raw_rosmessage = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->_internal_is_raw_rosmessage(), target);
  }

  // required bool is_debug = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_is_debug(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hero_costmap.ParaStaticLayer)
  return target;
}

size_t ParaStaticLayer::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:hero_costmap.ParaStaticLayer)
  size_t total_size = 0;

  if (_internal_has_topic_name()) {
    // required string topic_name = 8;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_topic_name());
  }

  if (_internal_has_first_map_only()) {
    // required bool first_map_only = 1;
    total_size += 1 + 1;
  }

  if (_internal_has_subscribe_to_updates()) {
    // required bool subscribe_to_updates = 2;
    total_size += 1 + 1;
  }

  if (_internal_has_track_unknown_space()) {
    // required bool track_unknown_space = 3;
    total_size += 1 + 1;
  }

  if (_internal_has_use_maximum()) {
    // required bool use_maximum = 4;
    total_size += 1 + 1;
  }

  if (_internal_has_unknown_cost_value()) {
    // required int32 unknown_cost_value = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_unknown_cost_value());
  }

  if (_internal_has_lethal_threshold()) {
    // required int32 lethal_threshold = 7;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_lethal_threshold());
  }

  if (_internal_has_trinary_map()) {
    // required bool trinary_map = 6;
    total_size += 1 + 1;
  }

  if (_internal_has_is_raw_rosmessage()) {
    // required bool is_raw_rosmessage = 9;
    total_size += 1 + 1;
  }

  if (_internal_has_is_debug()) {
    // required bool is_debug = 10;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t ParaStaticLayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hero_costmap.ParaStaticLayer)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x000003ff) ^ 0x000003ff) == 0) {  // All required fields are present.
    // required string topic_name = 8;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_topic_name());

    // required bool first_map_only = 1;
    total_size += 1 + 1;

    // required bool subscribe_to_updates = 2;
    total_size += 1 + 1;

    // required bool track_unknown_space = 3;
    total_size += 1 + 1;

    // required bool use_maximum = 4;
    total_size += 1 + 1;

    // required int32 unknown_cost_value = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_unknown_cost_value());

    // required int32 lethal_threshold = 7;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_lethal_threshold());

    // required bool trinary_map = 6;
    total_size += 1 + 1;

    // required bool is_raw_rosmessage = 9;
    total_size += 1 + 1;

    // required bool is_debug = 10;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParaStaticLayer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hero_costmap.ParaStaticLayer)
  GOOGLE_DCHECK_NE(&from, this);
  const ParaStaticLayer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParaStaticLayer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hero_costmap.ParaStaticLayer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hero_costmap.ParaStaticLayer)
    MergeFrom(*source);
  }
}

void ParaStaticLayer::MergeFrom(const ParaStaticLayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hero_costmap.ParaStaticLayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_topic_name(from._internal_topic_name());
    }
    if (cached_has_bits & 0x00000002u) {
      first_map_only_ = from.first_map_only_;
    }
    if (cached_has_bits & 0x00000004u) {
      subscribe_to_updates_ = from.subscribe_to_updates_;
    }
    if (cached_has_bits & 0x00000008u) {
      track_unknown_space_ = from.track_unknown_space_;
    }
    if (cached_has_bits & 0x00000010u) {
      use_maximum_ = from.use_maximum_;
    }
    if (cached_has_bits & 0x00000020u) {
      unknown_cost_value_ = from.unknown_cost_value_;
    }
    if (cached_has_bits & 0x00000040u) {
      lethal_threshold_ = from.lethal_threshold_;
    }
    if (cached_has_bits & 0x00000080u) {
      trinary_map_ = from.trinary_map_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      is_raw_rosmessage_ = from.is_raw_rosmessage_;
    }
    if (cached_has_bits & 0x00000200u) {
      is_debug_ = from.is_debug_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ParaStaticLayer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hero_costmap.ParaStaticLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParaStaticLayer::CopyFrom(const ParaStaticLayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hero_costmap.ParaStaticLayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParaStaticLayer::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ParaStaticLayer::InternalSwap(ParaStaticLayer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  topic_name_.Swap(&other->topic_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ParaStaticLayer, is_debug_)
      + sizeof(ParaStaticLayer::is_debug_)
      - PROTOBUF_FIELD_OFFSET(ParaStaticLayer, first_map_only_)>(
          reinterpret_cast<char*>(&first_map_only_),
          reinterpret_cast<char*>(&other->first_map_only_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ParaStaticLayer::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace hero_costmap
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::hero_costmap::ParaStaticLayer* Arena::CreateMaybeMessage< ::hero_costmap::ParaStaticLayer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::hero_costmap::ParaStaticLayer >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
